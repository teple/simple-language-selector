name: 빌드 ~ 파일 업로드 ~ readme 다운로드 링크 갱신

# master 에 푸쉬되었을 때 실행
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # 잡 이름은 크게 상관 없는 것 같음
  deploy:
    runs-on: ubuntu-latest
    steps:
      # 체크아웃 해서 소스를 가져옴
      - name: 코드 체크아웃
        uses: actions/checkout@v2

      # Node 모듈 캐싱 (실행속도를 빠르게)
      # -ref: https://devblog.croquis.com/ko/2020-11-06-1-using-github-actions/
      - name: Node 모듈 캐싱
        uses: actions/cache@v2
        # 아래 내용은 나중에 조사해보자 📝
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Node 14.x를 사용
      - name: 노드 14 사용
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      # 의존성모듈 설치
      - name: 의존성모듈 설치
        run: npm install

      # 결과물을 빌드
      - name: 결과물을 빌드
        run: npm run build:production

      # 빌드결과물 압축
      - name: 빌드결과물 압축
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          filename: 'dist.zip'
          path: './dist'
      # 압축 후 출력
      - name: 압축 후 출력
        run: ls -alt

      # 압축결과를 업로드
      - name: 압축결과를 업로드
        uses: actions/upload-artifact@v2
        with:
          name: dist.zip
          path: dist.zip

      # 아티팩트 링크를 취득 후 curl ~ jq 로 redirect url 취득
      # -ref: https://zenn.dev/tmsc4zht/scraps/5422c9d1ff3bb3
      - name: 아티팩트 링크를 취득 후 curl ~ jq 로 redirect url 취득
        run: |
          redirect_download_url=$(curl \
            -H "Authorization: token ${{ secrets.FOR_FETCH_ARTIFACTS }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/teple/simple-language-selector/actions/artifacts" | \
            jq -r ".artifacts[0].archive_download_url")
      # echo redirect_download_url
      - name: echo redirect_download_url
        run: echo $redirect_download_url
